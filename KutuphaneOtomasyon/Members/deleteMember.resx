<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="deletebtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        x6J/AWFN15qfb+D9AAAAAElFTkSuQmCC
</value>
  </data>
</root>